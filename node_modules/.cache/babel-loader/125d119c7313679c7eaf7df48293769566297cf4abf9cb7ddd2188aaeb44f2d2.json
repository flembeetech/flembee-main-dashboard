{"ast":null,"code":"var _jsxFileName = \"/Users/antonionardi/Proyectos/AseguraPro/asegurapro-dashboard/src/examples/Charts/LineCharts/GradientLineChart/index.js\",\n  _s = $RefreshSig$();\n/**\n=========================================================\n* Soft UI Dashboard React - v4.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useRef, useEffect, useState, useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Line } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\n\n// Soft UI Dashboard React components\nimport SoftBox from \"components/SoftBox\";\nimport SoftTypography from \"components/SoftTypography\";\n\n// Soft UI Dashboard React helper functions\nimport gradientChartLine from \"assets/theme/functions/gradientChartLine\";\n\n// GradientLineChart configurations\nimport configs from \"examples/Charts/LineCharts/GradientLineChart/configs\";\n\n// Soft UI Dashboard React base styles\nimport colors from \"assets/theme/base/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GradientLineChart(_ref) {\n  _s();\n  let {\n    title,\n    description,\n    height,\n    chart\n  } = _ref;\n  console.log(\"ENTRA 5\");\n  const chartRef = useRef(null);\n  const [chartData, setChartData] = useState({});\n  const {\n    data,\n    options\n  } = chartData;\n  const {\n    labels,\n    datasets\n  } = chart;\n  useEffect(() => {\n    console.log(labels, datasets);\n    const chartDatasets = datasets ? datasets.map(dataset => ({\n      ...dataset,\n      tension: 0.4,\n      pointRadius: 0,\n      borderWidth: 3,\n      borderColor: colors[dataset.color] ? colors[dataset.color || \"dark\"].main : colors.dark.main,\n      fill: true,\n      maxBarThickness: 6,\n      backgroundColor: gradientChartLine(chartRef.current.children[0], colors[dataset.color] ? colors[dataset.color || \"dark\"].main : colors.dark.main)\n    })) : [];\n    setChartData(configs(labels || [], chartDatasets));\n  }, [datasets, labels]);\n\n  // const renderChart = (\n  //   <SoftBox p={2}>\n  //     {title || description ? (\n  //       <SoftBox px={description ? 1 : 0} pt={description ? 1 : 0}>\n  //         {title && (\n  //           <SoftBox mb={1}>\n  //             <SoftTypography variant=\"h6\">{title}</SoftTypography>\n  //           </SoftBox>\n  //         )}\n  //         <SoftBox mb={2}>\n  //           <SoftTypography component=\"div\" variant=\"button\" fontWeight=\"regular\" color=\"text\">\n  //             {description}\n  //           </SoftTypography>\n  //         </SoftBox>\n  //       </SoftBox>\n  //     ) : null}\n  //     {useMemo(\n  //       () => (\n  //         <SoftBox ref={chartRef} sx={{ height }}>\n  //           <Line data={data} options={options} />\n  //         </SoftBox>\n  //       ),\n  //       [chartData, height]\n  //     )}\n  //   </SoftBox>\n  // );\n\n  // return title || description ? <Card>{renderChart}</Card> : renderChart;\n  /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 3\n  }, this);\n}\n\n// Setting default values for the props of GradientLineChart\n_s(GradientLineChart, \"Y2lGzgwji95Jcwy3FNNDh6MOdXs=\");\n_c = GradientLineChart;\nGradientLineChart.defaultProps = {\n  title: \"\",\n  description: \"\",\n  height: \"19.125rem\"\n};\n\n// Typechecking props for the GradientLineChart\nGradientLineChart.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  chart: PropTypes.objectOf(PropTypes.array).isRequired\n};\nexport default GradientLineChart;\nvar _c;\n$RefreshReg$(_c, \"GradientLineChart\");","map":{"version":3,"names":["useRef","useEffect","useState","useMemo","PropTypes","Line","Card","SoftBox","SoftTypography","gradientChartLine","configs","colors","jsxDEV","_jsxDEV","GradientLineChart","_ref","_s","title","description","height","chart","console","log","chartRef","chartData","setChartData","data","options","labels","datasets","chartDatasets","map","dataset","tension","pointRadius","borderWidth","borderColor","color","main","dark","fill","maxBarThickness","backgroundColor","current","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","defaultProps","propTypes","string","oneOfType","node","number","objectOf","array","isRequired","$RefreshReg$"],"sources":["/Users/antonionardi/Proyectos/AseguraPro/asegurapro-dashboard/src/examples/Charts/LineCharts/GradientLineChart/index.js"],"sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard React - v4.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useRef, useEffect, useState, useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Line } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\n\n// Soft UI Dashboard React components\nimport SoftBox from \"components/SoftBox\";\nimport SoftTypography from \"components/SoftTypography\";\n\n// Soft UI Dashboard React helper functions\nimport gradientChartLine from \"assets/theme/functions/gradientChartLine\";\n\n// GradientLineChart configurations\nimport configs from \"examples/Charts/LineCharts/GradientLineChart/configs\";\n\n// Soft UI Dashboard React base styles\nimport colors from \"assets/theme/base/colors\";\n\nfunction GradientLineChart({ title, description, height, chart }) {\n  console.log(\"ENTRA 5\")\n  const chartRef = useRef(null);\n  const [chartData, setChartData] = useState({});\n  const { data, options } = chartData;\n\n  const { labels, datasets } = chart;\n\n  useEffect(() => {\n    console.log(labels, datasets)\n    const chartDatasets = datasets\n      ? datasets.map((dataset) => ({\n          ...dataset,\n          tension: 0.4,\n          pointRadius: 0,\n          borderWidth: 3,\n          borderColor: colors[dataset.color]\n            ? colors[dataset.color || \"dark\"].main\n            : colors.dark.main,\n          fill: true,\n          maxBarThickness: 6,\n          backgroundColor: gradientChartLine(\n            chartRef.current.children[0],\n            colors[dataset.color] ? colors[dataset.color || \"dark\"].main : colors.dark.main\n          ),\n        }))\n      : [];\n\n    setChartData(configs(labels || [], chartDatasets));\n\n  }, [datasets, labels]);\n\n  // const renderChart = (\n  //   <SoftBox p={2}>\n  //     {title || description ? (\n  //       <SoftBox px={description ? 1 : 0} pt={description ? 1 : 0}>\n  //         {title && (\n  //           <SoftBox mb={1}>\n  //             <SoftTypography variant=\"h6\">{title}</SoftTypography>\n  //           </SoftBox>\n  //         )}\n  //         <SoftBox mb={2}>\n  //           <SoftTypography component=\"div\" variant=\"button\" fontWeight=\"regular\" color=\"text\">\n  //             {description}\n  //           </SoftTypography>\n  //         </SoftBox>\n  //       </SoftBox>\n  //     ) : null}\n  //     {useMemo(\n  //       () => (\n  //         <SoftBox ref={chartRef} sx={{ height }}>\n  //           <Line data={data} options={options} />\n  //         </SoftBox>\n  //       ),\n  //       [chartData, height]\n  //     )}\n  //   </SoftBox>\n  // );\n\n  // return title || description ? <Card>{renderChart}</Card> : renderChart;\n  <div></div>\n}\n\n// Setting default values for the props of GradientLineChart\nGradientLineChart.defaultProps = {\n  title: \"\",\n  description: \"\",\n  height: \"19.125rem\",\n};\n\n// Typechecking props for the GradientLineChart\nGradientLineChart.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  chart: PropTypes.objectOf(PropTypes.array).isRequired,\n};\n\nexport default GradientLineChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}