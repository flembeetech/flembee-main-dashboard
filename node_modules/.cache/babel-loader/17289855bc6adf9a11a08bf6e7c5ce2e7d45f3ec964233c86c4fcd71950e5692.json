{"ast":null,"code":"var _jsxFileName = \"/Users/antonionardi/Proyectos/AseguraPro/asegurapro-dashboard/src/examples/Charts/BarCharts/ReportsBarChart/index.js\",\n  _s = $RefreshSig$();\n/**\n=========================================================\n* Soft UI Dashboard React - v4.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Bar } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\n\n// Soft UI Dashboard React components\nimport SoftBox from \"components/SoftBox\";\nimport SoftTypography from \"components/SoftTypography\";\n\n// Soft UI Dashboard React examples\nimport BarReportsChartItem from \"examples/Charts/BarCharts/ReportsBarChart/ReportsBarChartItem\";\n\n// ReportsBarChart configurations\nimport configs from \"examples/Charts/BarCharts/ReportsBarChart/configs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReportsBarChart(_ref) {\n  _s();\n  let {\n    color,\n    title,\n    description,\n    chart,\n    items\n  } = _ref;\n  console.log(\"ENTRA REPORTS\");\n  const {\n    data,\n    options\n  } = configs(chart.labels || [], chart.datasets || {});\n  const renderItems = items.map(_ref2 => {\n    let {\n      icon,\n      label,\n      progress\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      children: /*#__PURE__*/_jsxDEV(BarReportsChartItem, {\n        color: color,\n        icon: {\n          color: icon.color,\n          component: icon.component\n        },\n        label: label,\n        progress: {\n          content: progress.content,\n          percentage: progress.percentage\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(SoftBox, {\n      padding: \"1rem\",\n      children: [useMemo(() => /*#__PURE__*/_jsxDEV(SoftBox, {\n        variant: \"gradient\",\n        bgColor: color,\n        borderRadius: \"lg\",\n        py: 2,\n        pr: 0.5,\n        mb: 3,\n        height: \"12.5rem\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), [chart, color]), /*#__PURE__*/_jsxDEV(SoftBox, {\n        px: 1,\n        children: [/*#__PURE__*/_jsxDEV(SoftBox, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(SoftTypography, {\n            variant: \"h6\",\n            fontWeight: \"medium\",\n            textTransform: \"capitalize\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SoftTypography, {\n            component: \"div\",\n            variant: \"button\",\n            color: \"text\",\n            fontWeight: \"regular\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SoftBox, {\n          py: 1,\n          px: 0.5,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: renderItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n// Setting default values for the props of ReportsBarChart\n_s(ReportsBarChart, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n_c = ReportsBarChart;\nReportsBarChart.defaultProps = {\n  color: \"dark\",\n  description: \"\",\n  items: []\n};\n\n// Typechecking props for the ReportsBarChart\nReportsBarChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired,\n  items: PropTypes.arrayOf(PropTypes.object)\n};\nexport default ReportsBarChart;\nvar _c;\n$RefreshReg$(_c, \"ReportsBarChart\");","map":{"version":3,"names":["useMemo","PropTypes","Bar","Card","Grid","SoftBox","SoftTypography","BarReportsChartItem","configs","jsxDEV","_jsxDEV","ReportsBarChart","_ref","_s","color","title","description","chart","items","console","log","data","options","labels","datasets","renderItems","map","_ref2","icon","label","progress","item","xs","sm","children","component","content","percentage","fileName","_jsxFileName","lineNumber","columnNumber","sx","height","padding","variant","bgColor","borderRadius","py","pr","mb","px","fontWeight","textTransform","container","spacing","_c","defaultProps","propTypes","oneOf","string","isRequired","oneOfType","node","objectOf","array","object","arrayOf","$RefreshReg$"],"sources":["/Users/antonionardi/Proyectos/AseguraPro/asegurapro-dashboard/src/examples/Charts/BarCharts/ReportsBarChart/index.js"],"sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard React - v4.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Bar } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\n\n// Soft UI Dashboard React components\nimport SoftBox from \"components/SoftBox\";\nimport SoftTypography from \"components/SoftTypography\";\n\n// Soft UI Dashboard React examples\nimport BarReportsChartItem from \"examples/Charts/BarCharts/ReportsBarChart/ReportsBarChartItem\";\n\n// ReportsBarChart configurations\nimport configs from \"examples/Charts/BarCharts/ReportsBarChart/configs\";\n\nfunction ReportsBarChart({ color, title, description, chart, items }) {\n  console.log(\"ENTRA REPORTS\")\n  const { data, options } = configs(chart.labels || [], chart.datasets || {});\n\n  const renderItems = items.map(({ icon, label, progress }) => (\n    <Grid item xs={6} sm={3} key={label}>\n      <BarReportsChartItem\n        color={color}\n        icon={{ color: icon.color, component: icon.component }}\n        label={label}\n        progress={{ content: progress.content, percentage: progress.percentage }}\n      />\n    </Grid>\n  ));\n\n  return (\n    <Card sx={{ height: \"100%\" }}>\n      <SoftBox padding=\"1rem\">\n        {useMemo(\n          () => (\n            <SoftBox\n              variant=\"gradient\"\n              bgColor={color}\n              borderRadius=\"lg\"\n              py={2}\n              pr={0.5}\n              mb={3}\n              height=\"12.5rem\"\n            >\n              <Bar data={data} options={options} />\n            </SoftBox>\n          ),\n          [chart, color]\n        )}\n        <SoftBox px={1}>\n          <SoftBox mb={2}>\n            <SoftTypography variant=\"h6\" fontWeight=\"medium\" textTransform=\"capitalize\">\n              {title}\n            </SoftTypography>\n            <SoftTypography component=\"div\" variant=\"button\" color=\"text\" fontWeight=\"regular\">\n              {description}\n            </SoftTypography>\n          </SoftBox>\n          <SoftBox py={1} px={0.5}>\n            <Grid container spacing={2}>\n              {renderItems}\n            </Grid>\n          </SoftBox>\n        </SoftBox>\n      </SoftBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of ReportsBarChart\nReportsBarChart.defaultProps = {\n  color: \"dark\",\n  description: \"\",\n  items: [],\n};\n\n// Typechecking props for the ReportsBarChart\nReportsBarChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired,\n  items: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default ReportsBarChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}