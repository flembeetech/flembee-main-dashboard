{"ast":null,"code":"var _jsxFileName = \"/Users/antonionardi/Proyectos/AseguraPro/asegurapro-dashboard/src/examples/Charts/BarCharts/ReportsBarChart/index.js\",\n  _s = $RefreshSig$();\n/**\n=========================================================\n* Soft UI Dashboard React - v4.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo, useEffect, useState } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Bar } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\n\n// Soft UI Dashboard React components\nimport SoftBox from \"components/SoftBox\";\nimport SoftTypography from \"components/SoftTypography\";\n\n// Soft UI Dashboard React examples\nimport BarReportsChartItem from \"examples/Charts/BarCharts/ReportsBarChart/ReportsBarChartItem\";\n\n// ReportsBarChart configurations\nimport configs from \"examples/Charts/BarCharts/ReportsBarChart/configs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReportsBarChart(_ref) {\n  _s();\n  let {\n    color,\n    title,\n    description,\n    chart,\n    items\n  } = _ref;\n  console.log(\"REPORTS?\");\n  const [chartData, setChartData] = useState({});\n  // const { data, options } = chartData;\n\n  const {\n    labels,\n    datasets\n  } = chart;\n  useEffect(() => {\n    console.log(\"ENTRA?\");\n    // const chartDatasets = datasets\n    //   ? datasets.map((dataset) => ({\n    //       ...dataset\n    //     }))\n    //   : [];\n\n    // setChartData(configs(labels || [], chartDatasets));\n  }, []);\n\n  // const renderItems = items.map(({ icon, label, progress }) => (\n  //   <Grid item xs={6} sm={3} key={label}>\n  //     <BarReportsChartItem\n  //       color={color}\n  //       icon={{ color: icon.color, component: icon.component }}\n  //       label={label}\n  //       progress={{ content: progress.content, percentage: progress.percentage }}\n  //     />\n  //   </Grid>\n  // ));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hola\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this)\n  // <Card sx={{ height: \"100%\" }}>\n  //   <SoftBox padding=\"1rem\">\n  //     {useMemo(\n  //       () => (\n  //         <SoftBox\n  //           variant=\"gradient\"\n  //           bgColor={color}\n  //           borderRadius=\"lg\"\n  //           py={2}\n  //           pr={0.5}\n  //           mb={3}\n  //           height=\"12.5rem\"\n  //         >\n  //          {chartData && <Bar data={data} options={options} />}\n  //         </SoftBox>\n  //       ),\n  //       [chart, color]\n  //     )}\n  //     <SoftBox px={1}>\n  //       <SoftBox mb={2}>\n  //         <SoftTypography variant=\"h6\" fontWeight=\"medium\" textTransform=\"capitalize\">\n  //           {title}\n  //         </SoftTypography>\n  //         <SoftTypography component=\"div\" variant=\"button\" color=\"text\" fontWeight=\"regular\">\n  //           {description}\n  //         </SoftTypography>\n  //       </SoftBox>\n  //       <SoftBox py={1} px={0.5}>\n  //         <Grid container spacing={2}>\n  //           {renderItems}\n  //         </Grid>\n  //       </SoftBox>\n  //     </SoftBox>\n  //   </SoftBox>\n  // </Card>\n  ;\n}\n\n// Setting default values for the props of ReportsBarChart\n_s(ReportsBarChart, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n_c = ReportsBarChart;\nReportsBarChart.defaultProps = {\n  color: \"dark\",\n  description: \"\",\n  items: []\n};\n\n// Typechecking props for the ReportsBarChart\nReportsBarChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired,\n  items: PropTypes.arrayOf(PropTypes.object)\n};\nexport default ReportsBarChart;\nvar _c;\n$RefreshReg$(_c, \"ReportsBarChart\");","map":{"version":3,"names":["useMemo","useEffect","useState","PropTypes","Bar","Card","Grid","SoftBox","SoftTypography","BarReportsChartItem","configs","jsxDEV","_jsxDEV","ReportsBarChart","_ref","_s","color","title","description","chart","items","console","log","chartData","setChartData","labels","datasets","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","defaultProps","propTypes","oneOf","string","isRequired","oneOfType","node","objectOf","array","object","arrayOf","$RefreshReg$"],"sources":["/Users/antonionardi/Proyectos/AseguraPro/asegurapro-dashboard/src/examples/Charts/BarCharts/ReportsBarChart/index.js"],"sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard React - v4.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo, useEffect, useState } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Bar } from \"react-chartjs-2\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\n\n// Soft UI Dashboard React components\nimport SoftBox from \"components/SoftBox\";\nimport SoftTypography from \"components/SoftTypography\";\n\n// Soft UI Dashboard React examples\nimport BarReportsChartItem from \"examples/Charts/BarCharts/ReportsBarChart/ReportsBarChartItem\";\n\n// ReportsBarChart configurations\nimport configs from \"examples/Charts/BarCharts/ReportsBarChart/configs\";\n\nfunction ReportsBarChart({ color, title, description, chart, items }) {\n  console.log(\"REPORTS?\")\n  const [chartData, setChartData] = useState({});\n  // const { data, options } = chartData;\n\n  const { labels, datasets } = chart;\n\n  useEffect(() => {\n    console.log(\"ENTRA?\")\n    // const chartDatasets = datasets\n    //   ? datasets.map((dataset) => ({\n    //       ...dataset\n    //     }))\n    //   : [];\n\n    // setChartData(configs(labels || [], chartDatasets));\n  }, []);\n\n  // const renderItems = items.map(({ icon, label, progress }) => (\n  //   <Grid item xs={6} sm={3} key={label}>\n  //     <BarReportsChartItem\n  //       color={color}\n  //       icon={{ color: icon.color, component: icon.component }}\n  //       label={label}\n  //       progress={{ content: progress.content, percentage: progress.percentage }}\n  //     />\n  //   </Grid>\n  // ));\n\n  return (\n    <div>hola</div>\n    // <Card sx={{ height: \"100%\" }}>\n    //   <SoftBox padding=\"1rem\">\n    //     {useMemo(\n    //       () => (\n    //         <SoftBox\n    //           variant=\"gradient\"\n    //           bgColor={color}\n    //           borderRadius=\"lg\"\n    //           py={2}\n    //           pr={0.5}\n    //           mb={3}\n    //           height=\"12.5rem\"\n    //         >\n    //          {chartData && <Bar data={data} options={options} />}\n    //         </SoftBox>\n    //       ),\n    //       [chart, color]\n    //     )}\n    //     <SoftBox px={1}>\n    //       <SoftBox mb={2}>\n    //         <SoftTypography variant=\"h6\" fontWeight=\"medium\" textTransform=\"capitalize\">\n    //           {title}\n    //         </SoftTypography>\n    //         <SoftTypography component=\"div\" variant=\"button\" color=\"text\" fontWeight=\"regular\">\n    //           {description}\n    //         </SoftTypography>\n    //       </SoftBox>\n    //       <SoftBox py={1} px={0.5}>\n    //         <Grid container spacing={2}>\n    //           {renderItems}\n    //         </Grid>\n    //       </SoftBox>\n    //     </SoftBox>\n    //   </SoftBox>\n    // </Card>\n  );\n}\n\n// Setting default values for the props of ReportsBarChart\nReportsBarChart.defaultProps = {\n  color: \"dark\",\n  description: \"\",\n  items: [],\n};\n\n// Typechecking props for the ReportsBarChart\nReportsBarChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired,\n  items: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default ReportsBarChart;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAEpD;AACA,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA,SAASC,GAAG,QAAQ,iBAAiB;;AAErC;AACA,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;;AAErC;AACA,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,cAAc,MAAM,2BAA2B;;AAEtD;AACA,OAAOC,mBAAmB,MAAM,+DAA+D;;AAE/F;AACA,OAAOC,OAAO,MAAM,mDAAmD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,SAASC,eAAeA,CAAAC,IAAA,EAA8C;EAAAC,EAAA;EAAA,IAA7C;IAAEC,KAAK;IAAEC,KAAK;IAAEC,WAAW;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAAN,IAAA;EAClEO,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C;;EAEA,MAAM;IAAEuB,MAAM;IAAEC;EAAS,CAAC,GAAGP,KAAK;EAElClB,SAAS,CAAC,MAAM;IACdoB,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB;IACA;IACA;IACA;IACA;;IAEA;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEV,OAAA;IAAAe,QAAA,EAAK;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;EACT;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;;AAEA;AAAAhB,EAAA,CArESF,eAAe;AAAAmB,EAAA,GAAfnB,eAAe;AAsExBA,eAAe,CAACoB,YAAY,GAAG;EAC7BjB,KAAK,EAAE,MAAM;EACbE,WAAW,EAAE,EAAE;EACfE,KAAK,EAAE;AACT,CAAC;;AAED;AACAP,eAAe,CAACqB,SAAS,GAAG;EAC1BlB,KAAK,EAAEb,SAAS,CAACgC,KAAK,CAAC,CAAC,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;EAC/FlB,KAAK,EAAEd,SAAS,CAACiC,MAAM,CAACC,UAAU;EAClCnB,WAAW,EAAEf,SAAS,CAACmC,SAAS,CAAC,CAACnC,SAAS,CAACiC,MAAM,EAAEjC,SAAS,CAACoC,IAAI,CAAC,CAAC;EACpEpB,KAAK,EAAEhB,SAAS,CAACqC,QAAQ,CAACrC,SAAS,CAACmC,SAAS,CAAC,CAACnC,SAAS,CAACsC,KAAK,EAAEtC,SAAS,CAACuC,MAAM,CAAC,CAAC,CAAC,CAACL,UAAU;EAC9FjB,KAAK,EAAEjB,SAAS,CAACwC,OAAO,CAACxC,SAAS,CAACuC,MAAM;AAC3C,CAAC;AAED,eAAe7B,eAAe;AAAC,IAAAmB,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}